import axios from "axios";
import { useContext, useEffect, useRef, useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import { toast } from "react-hot-toast";
import Cookies from "js-cookie";

import { AuthContext } from "../../provider/AuthContext";
import AuthForm from "@/components/auth/AuthForm";
import AuthButton from "@/components/auth/AuthButton";
import Head from "next/head";

const image =
  "https://res.cloudinary.com/dymjjmeyc/image/upload/v1679913069/AccountTrader/0x0_zfidbn.jpg";

export const SignUp = () => {
  const { push } = useRouter();
  const { user, setUser, setLoading } = useContext(AuthContext);

  const [formData, setFormData] = useState({
    name: "",
    email: "",
    password: "",
    verify: "",
  });

  const signup = async () => {
    setLoading(true);

    if (
      (formData.name.length ||
        formData.email.length ||
        formData.password.length ||
        formData.verify.length) === 0
    )
      return toast.error("Талбарыг зөв гүйцэт бөглө.");

    if (formData.password !== formData.verify)
      return toast.error("Нууц үгүүдийг адилхан бичнэ үү.");

    try {
      const user = await axios.post(
        "http://localhost:8000/api/v1/user/auth/signup",
        {
          name: formData.name,
          email: formData.email,
          password: formData.password,
        }
      );

      if (!user.data.success) return toast.error(user.data.message);

      Cookies.set("token", user.data.data.token);

      setUser(user.data.data.user);

      toast.success("Амжилттай бүртгүүллээ.");

      push("/");
    } catch (error) {
      console.log(error);
    }

    setLoading(false);
  };

  const nameRef = useRef();
  const emailRef = useRef();
  const passwordRef = useRef();
  const verifyRef = useRef();

  const handleKeyDown = (event) => {
    if (event.key === "Enter") {
      if (formData.name.length === 0) return nameRef.current.focus();
      if (formData.email.length === 0) return emailRef.current.focus();
      if (formData.password.length === 0) return passwordRef.current.focus();
      if (formData.verify.length === 0) return verifyRef.current.focus();
      signup();
    }
  };

  const handleNameValue = (event) => {
    setFormData({ ...formData, name: event.target.value });
  };

  const handleEmailValue = (event) => {
    setFormData({ ...formData, email: event.target.value });
  };

  const handlePassValue = (event) => {
    setFormData({ ...formData, password: event.target.value });
  };

  const handleVerifyValue = (event) => {
    setFormData({ ...formData, verify: event.target.value });
  };

  useEffect(() => {
    if (user !== null) push("/");
  }, [user]);

  return (
    <div className="relative w-full h-screen">
      <Head>
        <title>Signup - SwapZone</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <img
        src={image}
        className="object-cover object-center w-full h-full"
        alt=""
      />
      <div className="absolute top-0 left-0 w-full h-full flex justify-center items-center bg-black/30 px-3 xsm:px-6 sm:px-0">
        <div className="bg-white rounded-[15px] w-full sm:w-[420px] px-5 pt-8">
          <p className="w-full text-center text-[24px] font-semibold">
            Бүртгүүлэх
          </p>
          <div className="pt-[30px] pb-10 flex flex-col gap-5">
            <AuthForm
              type={"text"}
              inputRef={nameRef}
              title={"Нэр:"}
              handleValue={handleNameValue}
              keyDownFunc={handleKeyDown}
              value={formData.name}
              placeholder={"Нэр ээ бичнэ үү"}
            />
            <AuthForm
              type={"email"}
              inputRef={emailRef}
              title={"И-мэйл:"}
              handleValue={handleEmailValue}
              keyDownFunc={handleKeyDown}
              value={formData.email}
              placeholder={"И-мэйл ээ бичнэ үү"}
            />
            <AuthForm
              type={"password"}
              inputRef={passwordRef}
              title={"Нууц үг:"}
              handleValue={handlePassValue}
              keyDownFunc={handleKeyDown}
              value={formData.password}
              placeholder={"Нууц үг ээ бичнэ үү"}
            />
            <AuthForm
              type={"password"}
              inputRef={verifyRef}
              // title={"Нууц үг:"}
              handleValue={handleVerifyValue}
              keyDownFunc={handleKeyDown}
              value={formData.verify}
              placeholder={"Нууц үг ээ давтан бичнэ үү"}
            />
            <AuthButton title={"Бүртгүүлэх"} onClickFunc={signup} />
            <div className="flex justify-center">
              <Link href={"/auth/signin"}>
                <p className="cursor-pointer bg-clip-text text-transparent bg-gradient-to-t from-pink-500 to-violet-500 border-b-[1.5px] border-gradient">
                  Бүртгүүлэх ээ зогсоогоод нэвтрэх үү ?
                </p>
              </Link>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SignUp;
